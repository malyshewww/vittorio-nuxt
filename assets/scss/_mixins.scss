// Сброс стилей списков
@use "sass:math";

$xs: 479.98px;
$sm: 576px;
$md: 767.98px;
$lg: 991.98px;
$xl: 1024px;
$xxl: 1200px;
$xxxl: 1400px;
$big-xl: 1600px;

$minWidth: 320;
$maxWidth: 1920;
$maxWidthContainer: 1340;

@mixin bp-big-xl {
	@media (max-width: $big-xl) {
		@content;
	}
}

@mixin bp-xxxl {
	@media (max-width: $xxxl) {
		@content;
	}
}
@mixin bp-xxl {
	@media (max-width: $xxl) {
		@content;
	}
}
@mixin bp-xl {
	@media (max-width: $xl) {
		@content;
	}
}
@mixin bp-lg {
	@media (max-width: $lg) {
		@content;
	}
}
@mixin bp-md {
	@media (max-width: $md) {
		@content;
	}
}
@mixin bp-sm {
	@media (max-width: $sm) {
		@content;
	}
}
@mixin bp-xs {
	@media (max-width: $xs) {
		@content;
	}
}
@mixin hover {
	@media (any-hover:hover) {
		@content;
	}
}

@mixin reset-list {
	padding: 0;
	margin: 0;
	list-style-type: none;
}
// Сброс стилей ссылки
@mixin reset-link {
	text-decoration: none;
	color: inherit;
	outline: none;
}
// Сброс стилей кнопки
@mixin reset-button {
	border: none;
	background-color: transparent;
	outline: 0px solid transparent;
	padding: 0;
	margin: 0;
	cursor: pointer;
	font-size: inherit;
	color: inherit;
	font: inherit;
	border-radius: 0;
}
// Сброс стилей полей
@mixin reset-input {
	border: none;
	background-color: transparent;
	outline: none;
	padding: 0;
	margin: 0;
	cursor: inherit;
	color: inherit;
	font-size: inherit;
	font-family: inherit;
	border-radius: 0;
	appearance: none;
	&::placeholder {
		opacity: 1;
		color: inherit;
	}
	&:focus {
		&::placeholder {
			opacity: 0;
		}
	}
}
// Сброс textarea
@mixin reset-textarea {
	@include reset-input;
	resize: vertical;
}
// Сброс стилей select
@mixin reset-select {
	font-family: inherit;
	font-size: inherit;
	color: inherit;
	background-color: transparent;
	border: none;
	outline: none;
	appearance: none;
	cursor: pointer;
	&::-ms-expand {
		display: none;
	}
	& > option {
		padding: 0;
	}
}
@mixin padd($padd...) {
	padding: $padd;
}
@mixin transition($transition...) {
	-moz-transition: $transition;
	-o-transition: $transition;
	-webkit-transition: $transition;
	transition: $transition;
}
@mixin linkStates($default, $hover, $active) {
	color: $default;
	&:hover {
		color: $hover;
	}
	&:active {
		color: $active;
	}
}
@mixin fontSize($font-size, $line-height: normal, $letter-spacing: normal) {
	font-size: $font-size * 1px;
	line-height: math.div($line-height, $font-size) * 100%;
	letter-spacing: $letter-spacing * 1px;
}
// Медиа выражение
@mixin media($width) {
	@media screen and (max-width: $width) {
		@content;
	}
}
// Контрольная точка
// Применение: @include bp(xs/sm/md/lg/xl/xxl/) {}
@mixin bp($name) {
	$width: map-get($breakpoints, $name);
	@include media($width) {
		@content;
	}
}

// 12-ТИ КОЛОНОЧНАЯ СЕТКА
// Применение: @include col(6)
$grid-columns: 12 !default;
@mixin col($size: false, $columns: $grid-columns) {
	@if $size {
		flex: 0 0 auto;
		width: percentage(math.div($size, $columns));
	}
	@else {
		flex: 1 1 0;
		max-width: 100%;
	}
}

// АДАПТИВНОЕ СВОЙСТВО
@mixin adaptiv-value($property, $startSize, $minSize, $type) {
	$addSize: $startSize - $minSize;
	@if $type==1 {
		//Только если меньше контейнера
		#{$property}: $startSize + px;
		@media screen and (max-width: #{$maxWidthContainer + px}) {
			#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
		}
	}
	@else if $type==2 {
		//Только если больше контейнера
		#{$property}: $startSize + px;
		@media screen and (min-width: #{$maxWidthContainer + px}) {
			#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
		}
	}
	@else {
		//Всегда
		#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
	}
}